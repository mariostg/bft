# Generated by Django 5.0.6 on 2024-11-27 19:19

import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="BftStatus",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "status",
                    models.CharField(
                        choices=[("FY", "FY"), ("QUARTER", "QUARTER"), ("PERIOD", "PERIOD")],
                        max_length=30,
                        unique=True,
                        verbose_name="Status",
                    ),
                ),
                ("value", models.CharField(max_length=30, verbose_name="Value")),
            ],
        ),
        migrations.CreateModel(
            name="CostCenterChargeImport",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("fund", models.CharField(max_length=4)),
                ("costcenter", models.CharField(max_length=6)),
                ("gl", models.CharField(max_length=5)),
                ("ref_doc_no", models.CharField(max_length=10)),
                ("aux_acct_asmnt", models.CharField(max_length=20)),
                ("amount", models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ("doc_type", models.CharField(blank=True, max_length=2, null=True)),
                ("posting_date", models.DateField()),
                ("period", models.CharField(max_length=2)),
                ("fy", models.PositiveSmallIntegerField(default=0, verbose_name="Fiscal Year")),
            ],
        ),
        migrations.CreateModel(
            name="CostCenterChargeMonthly",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("fund", models.CharField(max_length=4)),
                ("costcenter", models.CharField(max_length=6, verbose_name="Cost Center")),
                ("amount", models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ("period", models.CharField(max_length=2)),
                ("fy", models.PositiveSmallIntegerField(default=0, verbose_name="Fiscal Year")),
            ],
            options={
                "verbose_name_plural": "Cost Center charges monthly",
            },
        ),
        migrations.CreateModel(
            name="Fund",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("fund", models.CharField(max_length=4, unique=True)),
                ("name", models.CharField(max_length=30)),
                ("vote", models.CharField(max_length=1)),
                ("download", models.BooleanField(default=True)),
            ],
            options={
                "verbose_name_plural": "Funds",
                "ordering": ["-download", "fund"],
            },
        ),
        migrations.CreateModel(
            name="LineItemImport",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("docno", models.CharField(max_length=10)),
                ("lineno", models.CharField(max_length=7)),
                ("spent", models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ("balance", models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ("workingplan", models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ("fundcenter", models.CharField(max_length=6)),
                ("fund", models.CharField(max_length=4)),
                ("costcenter", models.CharField(max_length=6)),
                ("internalorder", models.CharField(blank=True, max_length=7, null=True)),
                ("doctype", models.CharField(blank=True, max_length=2, null=True)),
                ("enctype", models.CharField(max_length=21)),
                ("linetext", models.CharField(blank=True, default="", max_length=50, null=True)),
                ("predecessordocno", models.CharField(blank=True, default="", max_length=20, null=True)),
                ("predecessorlineno", models.CharField(blank=True, default="", max_length=3, null=True)),
                ("reference", models.CharField(blank=True, default="", max_length=16, null=True)),
                ("gl", models.CharField(max_length=5)),
                ("duedate", models.DateField(blank=True, null=True)),
                ("vendor", models.CharField(blank=True, max_length=50, null=True)),
                ("createdby", models.CharField(blank=True, default="", max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Source",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("source", models.CharField(max_length=24, unique=True)),
            ],
            options={
                "verbose_name_plural": "Sources",
            },
        ),
        migrations.CreateModel(
            name="BftUser",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                ("last_login", models.DateTimeField(blank=True, null=True, verbose_name="last login")),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={"unique": "A user with that username already exists."},
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[django.contrib.auth.validators.UnicodeUsernameValidator()],
                        verbose_name="username",
                    ),
                ),
                ("first_name", models.CharField(blank=True, max_length=150, verbose_name="first name")),
                ("last_name", models.CharField(blank=True, max_length=150, verbose_name="last name")),
                ("email", models.EmailField(blank=True, max_length=254, verbose_name="email address")),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                ("date_joined", models.DateTimeField(default=django.utils.timezone.now, verbose_name="date joined")),
                ("procurement_officer", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "permissions": (("create_data", "can create data"), ("upload_data", "can upload data")),
            },
        ),
        migrations.CreateModel(
            name="Bookmark",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("bookmark_name", models.CharField(max_length=30)),
                ("bookmark_link", models.CharField(max_length=125)),
                ("bookmark_query_string", models.CharField(max_length=255, null=True)),
                (
                    "owner",
                    models.ForeignKey(
                        default="",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Owner's Favorite",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CapitalProject",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("project_no", models.CharField(max_length=8, unique=True, verbose_name="Project No")),
                ("shortname", models.CharField(blank=True, max_length=35, verbose_name="Project Name")),
                ("isupdatable", models.BooleanField(default=False, verbose_name="Is Updatable")),
                ("note", models.TextField(blank=True, null=True)),
                (
                    "procurement_officer",
                    models.ForeignKey(
                        blank=True,
                        limit_choices_to={"procurement_officer": True},
                        null=True,
                        on_delete=django.db.models.deletion.RESTRICT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Capital Projects",
                "ordering": ["project_no"],
            },
        ),
        migrations.CreateModel(
            name="CostCenter",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("costcenter", models.CharField(max_length=6, verbose_name="Cost Center")),
                ("shortname", models.CharField(blank=True, max_length=35, null=True, verbose_name="Cost Center Name")),
                ("isforecastable", models.BooleanField(default=False, verbose_name="Is Forecastable")),
                ("isupdatable", models.BooleanField(default=False, verbose_name="Is Updatable")),
                ("note", models.TextField(blank=True, null=True)),
                ("sequence", models.CharField(default="", max_length=25, unique=True, verbose_name="CC Path")),
                (
                    "procurement_officer",
                    models.ForeignKey(
                        blank=True,
                        limit_choices_to={"procurement_officer": True},
                        null=True,
                        on_delete=django.db.models.deletion.RESTRICT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "fund",
                    models.ForeignKey(
                        default="", on_delete=django.db.models.deletion.RESTRICT, to="bft.fund", verbose_name="Fund"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Cost Centers",
                "ordering": ["costcenter"],
            },
        ),
        migrations.AddField(
            model_name="bftuser",
            name="default_cc",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.RESTRICT,
                to="bft.costcenter",
                verbose_name="Default CC",
            ),
        ),
        migrations.CreateModel(
            name="ForecastAdjustment",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("amount", models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ("note", models.TextField(blank=True, null=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                ("created", models.DateTimeField(auto_now_add=True, null=True)),
                (
                    "costcenter",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="bft.costcenter",
                        verbose_name="Cost Center",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.RESTRICT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("fund", models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to="bft.fund")),
            ],
            options={
                "verbose_name_plural": "Forecast Adjustments",
                "ordering": ["costcenter", "fund"],
            },
        ),
        migrations.CreateModel(
            name="CostCenterAllocation",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("amount", models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                (
                    "fy",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (2020, "2020"),
                            (2021, "2021"),
                            (2022, "2022"),
                            (2023, "2023"),
                            (2024, "2024"),
                            (2025, "2025"),
                            (2026, "2026"),
                            (2027, "2027"),
                        ],
                        default=2024,
                        verbose_name="Fiscal Year",
                    ),
                ),
                (
                    "quarter",
                    models.CharField(
                        choices=[("0", "Q0"), ("1", "Q1"), ("2", "Q2"), ("3", "Q3"), ("4", "Q4")],
                        default="0",
                        max_length=1,
                    ),
                ),
                ("note", models.TextField(blank=True, null=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                ("created", models.DateTimeField(auto_now_add=True, null=True)),
                (
                    "costcenter",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="bft.costcenter",
                        verbose_name="Cost Center",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.RESTRICT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("fund", models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to="bft.fund")),
            ],
            options={
                "verbose_name_plural": "Cost Center Allocations",
            },
        ),
        migrations.CreateModel(
            name="CapitalYearEnd",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "fy",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (2020, "2020"),
                            (2021, "2021"),
                            (2022, "2022"),
                            (2023, "2023"),
                            (2024, "2024"),
                            (2025, "2025"),
                            (2026, "2026"),
                            (2027, "2027"),
                        ],
                        default=2024,
                        verbose_name="Fiscal Year",
                    ),
                ),
                ("commit_item", models.PositiveSmallIntegerField(default=0)),
                ("notes", models.TextField(blank=True)),
                ("ye_spent", models.PositiveIntegerField(default=0)),
                (
                    "capital_project",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="bft.capitalproject",
                        verbose_name="Capital Project",
                    ),
                ),
                ("fund", models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to="bft.fund")),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="CapitalNewYear",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "fy",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (2020, "2020"),
                            (2021, "2021"),
                            (2022, "2022"),
                            (2023, "2023"),
                            (2024, "2024"),
                            (2025, "2025"),
                            (2026, "2026"),
                            (2027, "2027"),
                        ],
                        default=2024,
                        verbose_name="Fiscal Year",
                    ),
                ),
                ("commit_item", models.PositiveSmallIntegerField(default=0)),
                ("notes", models.TextField(blank=True)),
                ("initial_allocation", models.PositiveIntegerField(default=0, verbose_name="Initial allocation")),
                (
                    "capital_project",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="bft.capitalproject",
                        verbose_name="Capital Project",
                    ),
                ),
                ("fund", models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to="bft.fund")),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="CapitalInYear",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "fy",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (2020, "2020"),
                            (2021, "2021"),
                            (2022, "2022"),
                            (2023, "2023"),
                            (2024, "2024"),
                            (2025, "2025"),
                            (2026, "2026"),
                            (2027, "2027"),
                        ],
                        default=2024,
                        verbose_name="Fiscal Year",
                    ),
                ),
                ("commit_item", models.PositiveSmallIntegerField(default=0)),
                ("notes", models.TextField(blank=True)),
                (
                    "quarter",
                    models.CharField(
                        choices=[("0", "Q0"), ("1", "Q1"), ("2", "Q2"), ("3", "Q3"), ("4", "Q4")],
                        default="0",
                        max_length=1,
                    ),
                ),
                ("allocation", models.PositiveIntegerField(default=0)),
                ("spent", models.PositiveIntegerField(default=0)),
                ("co", models.PositiveIntegerField(default=0)),
                ("pc", models.PositiveIntegerField(default=0)),
                ("fr", models.PositiveIntegerField(default=0)),
                ("le", models.PositiveIntegerField(default=0)),
                ("mle", models.PositiveIntegerField(default=0)),
                ("he", models.PositiveIntegerField(default=0)),
                (
                    "capital_project",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="bft.capitalproject",
                        verbose_name="Capital Project",
                    ),
                ),
                ("fund", models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to="bft.fund")),
            ],
        ),
        migrations.CreateModel(
            name="FundCenter",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("fundcenter", models.CharField(max_length=6, verbose_name="Fund Center")),
                ("shortname", models.CharField(blank=True, max_length=25, null=True, verbose_name="Fund Center Name")),
                ("sequence", models.CharField(max_length=25, verbose_name="FC Path")),
                ("level", models.SmallIntegerField(default=0, verbose_name="Level")),
                (
                    "fundcenter_parent",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="parent_fc",
                        to="bft.fundcenter",
                        verbose_name="Fund Center Parent",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Fund Centers",
                "ordering": ["fundcenter"],
            },
        ),
        migrations.AddField(
            model_name="costcenter",
            name="costcenter_parent",
            field=models.ForeignKey(
                default="0",
                on_delete=django.db.models.deletion.RESTRICT,
                related_name="children",
                to="bft.fundcenter",
                verbose_name="Cost Center Parent",
            ),
        ),
        migrations.AddField(
            model_name="capitalproject",
            name="fundcenter",
            field=models.ForeignKey(
                default="0",
                on_delete=django.db.models.deletion.RESTRICT,
                related_name="capital_projects",
                to="bft.fundcenter",
                verbose_name="Fund Center",
            ),
        ),
        migrations.AddField(
            model_name="bftuser",
            name="default_fc",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.RESTRICT,
                to="bft.fundcenter",
                verbose_name="Default FC",
            ),
        ),
        migrations.CreateModel(
            name="FundCenterAllocation",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("amount", models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                (
                    "fy",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (2020, "2020"),
                            (2021, "2021"),
                            (2022, "2022"),
                            (2023, "2023"),
                            (2024, "2024"),
                            (2025, "2025"),
                            (2026, "2026"),
                            (2027, "2027"),
                        ],
                        default=2024,
                        verbose_name="Fiscal Year",
                    ),
                ),
                (
                    "quarter",
                    models.CharField(
                        choices=[("0", "Q0"), ("1", "Q1"), ("2", "Q2"), ("3", "Q3"), ("4", "Q4")],
                        default="0",
                        max_length=1,
                    ),
                ),
                ("note", models.TextField(blank=True, null=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                ("created", models.DateTimeField(auto_now_add=True, null=True)),
                ("fund", models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to="bft.fund")),
                (
                    "fundcenter",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="bft.fundcenter",
                        verbose_name="Fund Center",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.RESTRICT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Fund Center Allocations",
            },
        ),
        migrations.CreateModel(
            name="LineItem",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("docno", models.CharField(max_length=10)),
                ("lineno", models.CharField(max_length=7)),
                ("spent", models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ("balance", models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ("workingplan", models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ("fundcenter", models.CharField(max_length=6)),
                ("fund", models.CharField(max_length=4)),
                ("internalorder", models.CharField(blank=True, max_length=7, null=True)),
                ("doctype", models.CharField(blank=True, max_length=2, null=True)),
                ("enctype", models.CharField(max_length=21)),
                ("linetext", models.CharField(blank=True, default="", max_length=50, null=True)),
                ("predecessordocno", models.CharField(blank=True, default="", max_length=20, null=True)),
                ("predecessorlineno", models.CharField(blank=True, default="", max_length=3, null=True)),
                ("reference", models.CharField(blank=True, default="", max_length=16, null=True)),
                ("gl", models.CharField(max_length=5)),
                ("duedate", models.DateField(blank=True, null=True)),
                ("vendor", models.CharField(blank=True, max_length=50, null=True)),
                ("createdby", models.CharField(blank=True, default="", max_length=50, null=True)),
                ("status", models.CharField(blank=True, default="", max_length=10, null=True)),
                ("fcintegrity", models.BooleanField(default=False)),
                ("costcenter", models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to="bft.costcenter")),
            ],
            options={
                "verbose_name_plural": "Line Items",
                "ordering": ["-docno", "lineno"],
            },
        ),
        migrations.CreateModel(
            name="LineForecast",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "forecastamount",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name="Forecast"),
                ),
                ("spent_initial", models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ("balance_initial", models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ("workingplan_initial", models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ("description", models.CharField(blank=True, max_length=512, null=True)),
                ("comment", models.CharField(blank=True, max_length=512, null=True)),
                ("deliverydate", models.DateField(blank=True, null=True, verbose_name="Delivery Date")),
                ("delivered", models.BooleanField(default=False)),
                ("buyer", models.CharField(blank=True, max_length=175, null=True)),
                ("updated", models.DateTimeField(auto_now=True, null=True)),
                ("created", models.DateTimeField(auto_now_add=True, null=True)),
                (
                    "owner",
                    models.ForeignKey(
                        default="",
                        limit_choices_to={"procurement_officer": True},
                        null=True,
                        on_delete=django.db.models.deletion.RESTRICT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "lineitem",
                    models.OneToOneField(
                        null=True, on_delete=django.db.models.deletion.SET_NULL, related_name="fcst", to="bft.lineitem"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="costcenter",
            name="source",
            field=models.ForeignKey(
                default="", on_delete=django.db.models.deletion.RESTRICT, to="bft.source", verbose_name="Source"
            ),
        ),
        migrations.AddConstraint(
            model_name="bookmark",
            constraint=models.UniqueConstraint(
                fields=("bookmark_link", "bookmark_query_string", "owner"), name="bft_bookmark_is_unique"
            ),
        ),
        migrations.AddConstraint(
            model_name="costcenterallocation",
            constraint=models.UniqueConstraint(
                fields=("fund", "costcenter", "quarter", "fy"), name="unique_cost_center_allocation"
            ),
        ),
        migrations.AddConstraint(
            model_name="capitalyearend",
            constraint=models.UniqueConstraint(
                fields=("fund", "capital_project", "commit_item", "fy"), name="bft_capitalyearend_is_unique"
            ),
        ),
        migrations.AddConstraint(
            model_name="capitalnewyear",
            constraint=models.UniqueConstraint(
                fields=("fund", "capital_project", "commit_item", "fy"), name="bft_capitalnewyear_is_unique"
            ),
        ),
        migrations.AddConstraint(
            model_name="capitalinyear",
            constraint=models.UniqueConstraint(
                fields=("fund", "capital_project", "commit_item", "fy", "quarter"), name="capital_in_year_is_unique"
            ),
        ),
        migrations.AddConstraint(
            model_name="fundcenter",
            constraint=models.UniqueConstraint(
                fields=("fundcenter", "fundcenter_parent"), name="bft_fundcenter_is_unique"
            ),
        ),
        migrations.AddConstraint(
            model_name="fundcenterallocation",
            constraint=models.UniqueConstraint(
                fields=("fund", "fundcenter", "quarter", "fy"), name="unique_fund_center_allocation"
            ),
        ),
        migrations.AddIndex(
            model_name="costcenter",
            index=models.Index(fields=["costcenter"], name="bft_costcen_costcen_b24ad8_idx"),
        ),
        migrations.AddConstraint(
            model_name="costcenter",
            constraint=models.UniqueConstraint(
                fields=("costcenter", "costcenter_parent"), name="bft_costcenter_is_unique"
            ),
        ),
    ]
